let nome = 'Ellie' ;
let classe = 'Mago' ;
let elemento = 'Morte' ;
let nivel = 20 ;
let vida = 100 ;
let ouro = 40 ;
let xp = 60 ;
let experiencia = 10 ;
let manaAtual = 60 ;
let manaMaxima = 90 ;
let vidaMaxima = 100 ;
let localAtual = 'Cidade ImpossÃ­vel, Tenebris'
let sanidade = 70 ;



const NOMEARMA = 'GrimÃ³rio DecadÃªncia' ;
let danoBase = 30 ;
const NOMEARMADURA = 'Capa da Morte' ;
const DEFESABASE = 10 ;

console.log (`ğŸ§¾ InÃ­cio da Jornada de` + nome ) ;
console.log (`â€¢ Vida: ${vida}`) ;
console.log (`â€¢ NÃ­vel: ${nivel}`) ;
console.log (`â€¢ Ouro: ${ouro},`) ;
console.log (`â€¢ XP: ${xp}`) ;
console.log (`â€¢ Dano da Espada ${danoBase}`) ;
console.log ( '------------------------------------------------------') ;

xp += 150 ;
ouro -= 30 ;
vida += 40 ;
danoBase += 60 ;

console.log ( 'ğŸ§¾ RelatÃ³rio final da Jornada de' + nome ) ;
console.log (' ') ;
console.log ( `â€¢ Personagem: ${nome} `) ;
console.log ( `â€¢ NÃ­vel: ${nivel} `) ;
console.log ( `â€¢ XP: ${xp} `) ;
console.log ( `â€¢ Vida: ${vida} `) ;
console.log ( `â€¢ Ouro: ${ouro} `) ;
console.log ( `â€¢ Dano da Espada: ${danoBase} `) ;

console.log('------------------------------------------') ;

let ataqueTotal = nivel + danoBase
let defesaTotal = DEFESABASE + (nivel / 2 ) ;

let vidaSuficiente = vida > 70 ;
let ataqueForte = ataqueTotal > 60 ;
let nivelAvancado = nivel >= 10 ;
podeEnfrentarGuardiao = vidaSuficiente && ( ataqueForte || nivelAvancado) ;

console.log ( `ğŸ§¾ Lore da Personagem:${nome}`) ;
console.log (' ') ;
console.log (`${nome} , Ã© uma maga guardiÃ£ da Chamada ${localAtual}`) ;
console.log (`Seu ${NOMEARMA} Ã© formado do elemento de Morte, onde pode realizar ataques. Com o seu ${NOMEARMA} pode impedir ataques de cÃ³digos maliciosos paranormais Ã¡ Tenebris`) ;
console.log (`Com nÃ­vel de ${nivel} e um ataque total de ${ataqueTotal}, ${nome} Ã© uma Maga misteriosa e sombria`) ;
console.log (`Sua defesa de ${defesaTotal} aumentada pela sua ${NOMEARMADURA}, conseguem atingir 30 pontos de proteÃ§Ã£o` ) ;
console.log (`ApÃ³s treinamentos com entidades paranormais, ${nome} conseguiu alcanÃ§ar o nÃ­vel ${xp} de XP e carrega ${ouro} moedas de ouro`) ;
console.log ( `Com ${vida} pontos de vida, ${nome} tem sido uma das Magas mais dedicadas e promissoras para proteger a cidade impossÃ­vel de Tenebris`) ;
console.log ('Pode enfrentar o guardiÃ£o?' , podeEnfrentarGuardiao ) ;
console.log ('Vida suficiente?' , vidaSuficiente) ;
console.log ('Ataque Forte?', ataqueForte) ;
console.log ('NÃ­vel AvanÃ§ado?', nivelAvancado) ;
console.log ('-------------------------------------------')

// ContinuaÃ§Ã£o... 

console.log ('ğŸ§¾ Resgate e Acressimo dos Dados')
console.log (' ') ;
console.log (`â€¢ Nome do Personagem: ${nome}`) ;
console.log (`â€¢ Classe do Personagem: ${classe}`) ;
console.log (`â€¢ Vida Atual: ${vida}`) ;
console.log (`â€¢ NÃ­vel: ${nivel}`) ;
console.log (`â€¢ Ouro: ${ouro}`) ;
console.log (`â€¢ Exeperiencia: ${experiencia}`) ;
console.log (`â€¢ Vida Maxima: ${vidaMaxima}`) ;
console.log (`â€¢ Mana Atual: ${manaAtual}`) ;
console.log (`â€¢ Elemento Paranormal: ${elemento}`) ;
console.log (`â€¢ Sanidade Atual: ${sanidade}`) ;

// O elemento paranormal, seria uma forÃ§a primordial que formam a base da magia no meu universo, existem quatro elementos e cada um deles possui caracterÃ­sticas e propriedades diferentes defenindo a forma de como o paranormal se manifesta no mundo do jogo 

//  Adicionando novos atributos para batalha...

let forca = 40 ;
let defesa = 40 ;
let agilidade = 20 ;
let vigor = 10 ;
let presenca = 50 ;
let combatesVencidos = 0 ;

console.log ('-------------------------------------------') ;

// CapÃ­tulo 1 - Condicionais simples
 
console.log ('Capitulo 1: ğŸ’« Aprimorar Arma') ;
console.log (`Enquanto ${nome} estava fazendo a proteÃ§Ã£o da ${localAtual}, ela acha necessÃ¡rio aprimorar sua ${NOMEARMA} com novos rituais, pois sente que uma batalha se aproxima`) ;

// VerificaÃ§Ã£o de classe...

if (classe === 'Mago'){
    console.log (`ğŸ’« ${nome} sabe que consegue amaldiÃ§oar e aprimorar sua arma por conta de sua classe sem ter nenhuma penalidade com isso`) ;
}

// No RPG em que eu estou me inspirando, caso o personagem nÃ£o tivesse um certo treinamento e conhecimento na Ã¡rea em que a missÃ£o Ã© feita (no caso os feitiÃ§os e amaldiÃ§ionamentos de coisas), ele pode perder pontos de vida 

// VerificaÃ§Ã£o do nÃ­vel de mana do personagem...

if ( manaAtual >= 30 ){
    console.log (`ğŸ’« ${nome} consegue aprimorar o ${NOMEARMA} com maestria!`) ;
}

// DescriÃ§Ã£o de como a arma foi amaldiÃ§oada...

if (elemento === 'Morte'){
    console.log (`ApÃ³s amaldiÃ§oar o ${NOMEARMA} sÃ­mbolos antigos se acendem na cor preta, como se eles fossem escritos por sangue, sangue seco. O elemento de ${elemento} percorre as pÃ¡ginas, amaldiciÃ§oando o ${NOMEARMA} com novos cÃ³digos e feitiÃ§os`) ;
}

// Usei essa situaÃ§Ã£o com o if, pois,se o elemento fosse diferente a esse, a descriÃ§Ã£o seria completamente diferente

console.log ('-------------------------------------------') ;

// CapÃ­tulo 2 - Condicionais Compostas

console.log ('CapÃ­tulo 2 - ğŸ’« VerificaÃ§Ã£o de CondiÃ§Ã£o') ;
console.log (`ApÃ³s ${nome} conseguir amaldiÃ§oar seu ${NOMEARMA}, sentindo cada vez mais prÃ³xima da batalha, para garantir que a ${localAtual} nÃ£o seja engolida de vez pelo o Outro lado,mantendo ela na medida do possÃ­vel, equilibrada`) ;

// O outro Lado dentro da minha lore,seria um mundo paranormal onde existem criaturas tambÃ©m paranormais que procurram corromper Tenebris e usar ela ao seu favor, porÃ©m em Tenebris dento do universo em que estou me inspirando eles se manifestam com mais forÃ§a 

// VerificaÃ§Ã£o de sanidade antes do combate...

if (sanidade >=50 ){
    console.log (`ğŸ’« ${nome} respira fundo e consegue controlar seus sentimentos e o chamado do Outro Lado. No fundo, algo dentro dela deseja responder esse chamado, deixar-se consumir pelo Outro Lado, porÃ©m ela consegue resistir`) ;
}else {
    console.log (`${nome} sente sua mente ser parcialmente consumida,corrompida pelo Outro lado,pelas palavras,pelos cÃ³digos que o grimÃ³rio sussurra. Isso foi consequÃªncia de nÃ£o saber lidar com sua magia e a sua mente`) ;
    sanidade -= 10 ;
}

// ReforÃ§o para a membrana de Tenebris...

//Membrana no RPG que estou me inspirando,Ã© como se fosse uma barreira que separa o mundo normal do mundo paranormal,porÃ©m em Tenebris ela Ã© muito mais enfraquecida

console.log (`ApÃ³s ${nome} preparar sua Sanidade e sua mente para o combate que se aproxima cada vez mais, ela decide fortalecer a membrana de ${localAtual}, jÃ¡ que devido a influÃªncia paranormal constante, ela se encontra fragilizada`) ;

if ( sanidade < 60) {
    console.log (`${nome} com o ${NOMEARMA} em mÃ£os, tenta usar um feitiÃ§o que reforÃ§e a membrana temporariamente, mas ela nÃ£o consegue realizar o ritual, a energia do elemento de ${elemento} flui de maneira errada, parta da mana de ${nome} Ã© drenada pelo Outro Lado`) ;
    manaAtual = manaAtual - 30 ;
    console.log ('Mana Atual:', manaAtual) ;
} else {
    console.log (`ğŸ’« ${nome} se conecta ao ${NOMEARMA} e ao seu elemento, e comeÃ§a a sentir seu poder canalizando e consegue fortalacer temporariamente a membrana`) ;
}

console.log ('-------------------------------------------') ;

// CapÃ­tulo 3 - Condicionais encadeadas

console.log ('CapÃ­tulo 3 - ğŸ’« Batalha') ;
console.log (`${nome} sente a membrana enfraquecer mesmo com a sua proteÃ§Ã£o, ficando com cada vez mais neblina na ${localAtual}`) ;

let poderInimigo = 30 ;
let poderTotal = forca + defesa + agilidade + vigor + presenca ;

// Novamente, no RPG que estou me inspirando, a apariÃ§Ã£o de neblina em um local significa que a membrana estÃ¡ fraca, e que a apariÃ§Ã£o de eventos ou criaturas paranormais pode estar prestes a acontecer

console.log (`Derrepente, Ã© como se tudo tivesse sido repleto de sangue na visÃ£o de ${nome}, como se o mundo de tivesse sido derretido por um momento. EntÃ£o surge uma criatura,com uma silhueta quase humanoide no meio da neblina, exeto pelo fato de suas garras serem enormes,sua pele avermelhada e seu jeito encurvado e corcunda de andar, e enquanto a criatura ia se aproximando era cada vez mais possÃ­vel de ver sua face,porÃ©m a criatura nÃ£o tinha um rosto, ela tinha apenas dentes enormes no lugar da cara, como se o rosto dela fosse uma boca enorme e nojenta`) ;

if ( poderTotal > poderInimigo + 38 ) {
    console.log (`${nome} concentra todo o seu poder, e entÃ£o decide conjurar um ritual de seu elemento de ${elemento}. Com seu ${NOMEARMA} ao seu lado, ela conjura um ritual onde cria uma cÃ³pia da criatura entre as palmas da sua mÃ£o`) ;
    console.log (`Enquanto a criatura caminhava lentamente em sua direÃ§Ã£o, com uma postura torta e cambalejando, ${nome} se concentra enquanto olha fixamente para a criatura, pega um pouco de poeira que estÃ¡ no chÃ£o e faz uma projeÃ§Ã£o negra da criatura entra as suas palmas`) ;
    console.log (` Enquanto ${nome} se concentra em realizar seu ritual sua aparÃªncia muda,seus olhos ficam por inteiro pretos, suas orelhas comeÃ§am a ficar pontudas,o tom de seus cabelos comeÃ§am a mudar para tons de preto e tatuagens com simbulos paranormais comeÃ§am a aparecer em todo seu seu corpo.Isso enquanto o ritual estava acontecendo`) ;
    console.log (` O ${NOMEARMA} comeÃ§a a brilhar em tons frios como preto e branco nas gravuras de sua capa, e as pÃ¡ginas dele comÃ§am a ser folhetadas sozinhas enquanto ${nome} faz o ritual`) ;
    console.log (`Assim que a cÃ³pia da criatura fica pronta entre as palmas das mÃ£os de ${nome} ela "estoura" o ritual, fechando a palma das mÃ£os bem quando a criatura estava em sua frente prestes a atacar. A criatura acaba sendo corroÃ­da por dentro pela morte.destruÃ­da antes que pudesee prejudicar mais ${localAtual}`) ;
} else if (poderTotal >= poderInimigo && poderTotal <= poderInimigo + 30 ) {
    console.log (`${nome} concentra todo o seu poder, e entÃ£o decide conjurar um ritual de seu elemento de ${elemento}. Com seu ${NOMEARMA} ao seu lado, ela conjura um ritual onde cria uma cÃ³pia da criatura entre as palmas da sua mÃ£o`) ;
    console.log (`Enquanto ${nome} estava fazendo uma cÃ³pia da criatura entra suas palmas, ela nÃ£o consegue realizar o ritual a tempo de acabar de vez com a criatura e fechar as palmas das mÃ£os para mata-la e entÃ£o, acaba sendo ferida pela criatura, porÃ©m ${nome} nÃ£o desiste `) ;
    console.log (`${nome} canaliza o resto da sua mana e do seu elemento de ${elemento} e invoca um feitiÃ§o e joga sobre a criatura`) ;
    console.log (`A criatura recua, ferida e quase desacordada pelo dano de morte que ${nome} deu nela... mais ainda viva`) ;
    console.log (`${localAtual} permanece em risco, principalmente pela vÃºlnerabilidade da membrana e da criatura viva`) ;
    vida =- 10 ;
} else {
    console.log (`${nome} concentra todo o seu poder, e entÃ£o decide conjurar um ritual de seu elemento de ${elemento}. Com seu ${NOMEARMA} ao seu lado, ela conjura um ritual onde cria uma cÃ³pia da criatura entre as palmas da sua mÃ£o`) ;
    console.log (`${nome} cai de joelhos antes mesmo de completar o ritual contra a criatura, ${nome} nem parece perceber a velocidade que a criatura chega atÃ© ela,pois quando ela olha para aquela criatura nojenta e humanoide, ela jÃ¡ estÃ¡ em cima de ${nome}`) ;
    console.log (`O ${NOMEARMA} comeÃ§a a vibrar,tremer e a levitar, ${nome} escuta vindo do ${NOMEARMA} que estÃ¡ ao seu lado, palavras que ela nÃ£o consegue compreender`) ;
    console.log (`${nome} jÃ¡ sem forÃ§as, sua magia falha e a criatura ataca brutalmente. A Barreira de proteÃ§Ã£o a membrana se rompe. E o outro lado comeÃ§a a cosumir ${localAtual} sem alguÃ©m para protege-la`) ;
    sanidade -= 10 ;
    vida -= 30 ;
    console.log (`Sanidade e Vida DiminuiÃ­da. Atual:`, sanidade && vida) ;
}

//Esse ritual realmente exite no universo em que me inspiro,porÃ©m ele nÃ£o Ã© exatamente como descrevi, mas acho a narrativa dele muito boa e interessante

//ContinuaÃ§Ã£o...

//Inimigos do outro lado...

let entidadesDoOutroLado = [
    { nome: 'Gal', poder: 35 } ,
    { nome: 'Tbag', poder: 20} ,
]

console.log (`ApÃ³s a vitÃ³ria da guerra final,${localAtual} fica relativamente segura, atÃ© o momento`) ;
console.log (`A membrana permanece do mesmo jeito que sempre esteve, porÃ©m era como se ${nome} sentisse abrir sÃºtis fissuras na membrana, como se algo tivesse entrando por elas...`) ;
console.log (`Dessas fissuras, duas entidades ligadas ao Outro Lado,que usam o poder do paranormal para o mal, surgem,atraÃ­das pela energia e vulnerabilidade da Ãºltima batalha, tentando invandir para danificar e acabar com o umas dos maiores locais paranormais existente,${localAtual}`) ;

//For tradicional...

for (let i = 0; i <entidadesDoOutroLado.length; i++){
    let inimigo = entidadesDoOutroLado[i] ;
    console.log (`${nome} enfrenta: ${inimigo.nome} (Poder:${inimigo.poder})`) ;


if (poderTotal >= inimigo.poder + 10) {
    console.log (`${nome} derrota ${inimigo.nome} seu inimigo, com facilidade, expulsando-o de seu territÃ³rio sem muito alvoroÃ§o, a membrana continua do mesmo jeito que sempre esteve`) ;
} else {
    console.log (`${nome} Ã© ferida na luta contra${inimigo.nome}, mas consegue expulsa-los com muito esforÃ§o e luta`) ;
    vigor -= 5 ;
    vida -= 30 ;
}
}

//MÃ©todos de Array...

let inventario = [ 'Capa da Morte', 'GrimÃ³rio DecadÃªncia','40 Moedas de Ouro', 'joia Luminosa' ] ;

console.log (`ApÃ³s a pequena batalha que ${nome} teve com entidades ligadas ao Outro Lado, ela continua fazendo sua proteÃ§Ã£o a ${localAtual}, rondando e observando o locar para averiguar que nÃ£o tem nada fora do comum `) ;
console.log (`Enquanto ${nome} estava andando pela ${localAtual}, ela acaba encontrando um Amuleto Misterioso jogado no chÃ£o. ${nome} entÃ£o, decide pega-lo e analisa-lo`) ;
let itemEncontrado = "Amuleto de Morte" ;
console.log (`Enquanto ${nome} estava analisando o ${itemEncontrado}, ela percebe que o elemento paranormal presente neste amuleto seria o de ${elemento},seu prÃ³prio elemento, por isso, ela decide ficar com o objeto, pensando que o ${itemEncontrado} poderia dar algum tipo de vantagem para ela`) ;
console.log (`PorÃ©m ${nome} percebe que nÃ£o conseguiria levar tantos objetos com ela`) ;
console.log (`${nome} decide largar a sua Joia Luminosa e pegar o ${itemEncontrado}`) ;
vida += 10 ;

//Removendo o Ãºltimo item..
let itemRemovido = inventario.pop ();

//Colocando o item encontrado no inventÃ¡rio...
inventario.push (itemEncontrado) ;

console.log ('InventÃ¡rio Atual:', inventario) ;

//Usando for...of ...

for (let inimigo of entidadesDoOutroLado){
    console.log (`${nome}, enquanto caminhava pela ${localAtual},observa as marcas das fissuras na membrana deixadas por (${inimigo.nome}  antes das mesmas desaparecerem. Se ${nome} nÃ£o tivesse treinamento, conhecimento e afinidade com o Outro lado e o paranormal, ${nome} nÃ£o poderia sequer sentir ou ver a membrana `) ;
}

//Final...
console.log (`Com todas as entidades e criaturas derrotadas, ${nome} consegue restaurar o que sobrou das fissuras das membranas, apesar da eterna fragilidade da membrana de ${localAtual}`) ;
console.log (`Apesar disso, ${nome} continua fazendo a proteÃ§Ã£o de ${localAtual}. O silÃªncio retorna, e a escuridÃ£o do outro lado da membrana permanece por lÃ¡`) ;